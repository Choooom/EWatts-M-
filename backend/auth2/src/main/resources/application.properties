spring.application.name=auth2

server.port=8081

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=974602
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwt.secret=d9hRgrR+5XZPVD4Oq2u7Gjk72TUL6U1GbnVQw1v89lN6aXo/5a5Xbk4mhCzFSgJm
app.jwt.expiration-ms=86400000
app.jwt.refresh-expiration-ms=604800000

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=romilleilaida420@gmail.com
spring.mail.password=nkxtaopwubcmfjmj
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# OTP Configuration
app.otp.expiration-minutes=5
app.email.from=romilleilaida420@gmail.com

# OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=Ov23liTJZLje7ot0rOqV
spring.security.oauth2.client.registration.github.client-secret=67b43fb46ea15b3eabee12cc4ac1c2468e7d9c2e
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email

spring.security.oauth2.client.registration.discord.client-id=1404305357353910272
spring.security.oauth2.client.registration.discord.client-secret=y_snMpDL_BsPxWU5AfXjrTvylY1iMsKB
spring.security.oauth2.client.registration.discord.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.discord.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.discord.scope=identify,email

spring.security.oauth2.client.provider.discord.authorization-uri=https://discord.com/api/oauth2/authorize
spring.security.oauth2.client.provider.discord.token-uri=https://discord.com/api/oauth2/token
spring.security.oauth2.client.provider.discord.user-info-uri=https://discord.com/api/users/@me
spring.security.oauth2.client.provider.discord.user-name-attribute=username

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:8080
