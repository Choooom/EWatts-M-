server.port=${SERVER_PORT}
# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS}
app.jwt.refresh-expiration-ms=${JWT_REFRESH_EXPIRATION_MS}

# Email Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# OTP Configuration
app.otp.expiration-minutes=${OTP_EXPIRATION_MINUTES}
app.email.from=${MAIL_FROM}

# OAuth2 Configuration
oauth2.mobile-redirect-uri=${OAUTH-REDIRECT-URI}

# OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=${OAUTH-REDIRECT-URI}/api/oauth2/callback/github
spring.security.oauth2.client.registration.github.scope=user:email
oauth2.github.client-id=${GITHUB_CLIENT_ID}
oauth2.github.client-secret=${GITHUB_CLIENT_SECRET}
oauth2.github.auth-url=https://github.com/login/oauth/authorize
oauth2.github.token-url=https://github.com/login/oauth/access_token
oauth2.github.user-info-url=https://api.github.com/user

spring.security.oauth2.client.registration.discord.client-id=${DISCORD_CLIENT_ID}
spring.security.oauth2.client.registration.discord.client-secret=${DISCORD_CLIENT_SECRET}
spring.security.oauth2.client.registration.discord.redirect-uri=${OAUTH-REDIRECT-URI}/api/oauth2/callback/discord
spring.security.oauth2.client.registration.discord.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.discord.scope=identify,email
oauth2.discord.client-id=${DISCORD_CLIENT_ID}
oauth2.discord.client-secret=${DISCORD_CLIENT_SECRET}
oauth2.discord.auth-url=https://discord.com/api/oauth2/authorize
oauth2.discord.token-url=https://discord.com/api/oauth2/token
oauth2.discord.user-info-url=https://discord.com/api/users/@me

spring.security.oauth2.client.provider.discord.authorization-uri=https://discord.com/api/oauth2/authorize
spring.security.oauth2.client.provider.discord.token-uri=https://discord.com/api/oauth2/token
spring.security.oauth2.client.provider.discord.user-info-uri=https://discord.com/api/users/@me
spring.security.oauth2.client.provider.discord.user-name-attribute=username

# Eureka Configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:8080
